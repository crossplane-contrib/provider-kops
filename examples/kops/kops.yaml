apiVersion: kops.kops.crossplane.io/v1alpha1
kind: Kops
metadata:
  name: example
spec:
  forProvider:
    stateBucket: s3://bar-kops-state
    domain: foo.com
    region: us-east-1
    clusterSpec:
      api:
        dns: {}
      authorization:
        alwaysAllow: {}
      nonMasqueradeCIDR: 100.64.0.0/10
      cloudProvider: aws
      iam:
        legacy: false
      etcdClusters:
      - name: main
        provider: Manager
        cpuRequest: 200m
        etcdMembers:
        - encryptedVolume: true
          instanceGroup: master
          name: master
        memoryRequest: 100Mi
      kubelet:
        anonymousAuth: false
      kubernetesAPIAccess:
      - 0.0.0.0/0
      - ::/0
      kubernetesVersion: 1.23.8
      networkCIDR: 172.20.0.0/16
      # sshAccess:
      # - 0.0.0.0/0
      # - ::/0
      subnets:
      - cidr: 172.20.32.0/19
        name: us-east-1a
        type: Public
        zone: us-east-1a
      topology:
        dns:
          type: Public
        masters: public
        nodes: public
    instanceGroupSpec:
    - image: 099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220615
      instanceMetadata:
        httpPutResponseHopLimit: 3
        httpTokens: required
      machineType: t3.medium
      maxSize: 1
      minSize: 1
      nodeLabels:
        kops.k8s.io/instancegroup: master
      role: Master
      subnets:
      - us-east-1a
    - image: 099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220615
      machineType: t3.medium
      maxSize: 1
      minSize: 1
      nodeLabels:
        kops.k8s.io/instancegroup: nodes
      role: Node
      subnets:
      - us-east-1a
  writeConnectionSecretToRef:
    namespace: default
    name: example
  providerConfigRef:
    name: example